# start the containers
# host1
docker run --rm --name container1 -h container1 --net none -it centos-plus
docker run --rm --name container2 -h container2 --net none -it centos-plus
# host2
docker run --rm --name container3 -h container3 --net none -it centos-plus

# get docker pids
# host1
DOCKER_PID1=`docker inspect --format '{{ .State.Pid }}' "container1"`
DOCKER_PID2=`docker inspect --format '{{ .State.Pid }}' "container2"`
# host2
DOCKER_PID3=`docker inspect --format '{{ .State.Pid }}' "container3"`

# create veth pairs
# host1
ip link add vethxc1 type veth peer name vethnc1
ip link add vethxc2 type veth peer name vethnc2
# host2
ip link add vethxc3 type veth peer name vethnc3

# create bridges
# both
brctl addbr br1

# create vxlans
# both
ip link add vx1 type vxlan id 42

# connect everything
# host1
ip link set netns $DOCKER_PID1 dev vethnc1
ip link set netns $DOCKER_PID2 dev vethnc2
brctl addif br1 vethxc1
brctl addif br1 vethxc2
brctl addif br1 vx1
nsenter -t $DOCKER_PID1 -n ip addr add 10.100.1.1/24 dev vethnc1
nsenter -t $DOCKER_PID2 -n ip addr add 10.100.1.2/24 dev vethnc2
# host2
ip link set netns $DOCKER_PID3 dev vethnc3
brctl addif br1 vethxc3
brctl addif br1 vx1
nsenter -t $DOCKER_PID3 -n ip addr add 10.100.1.3/24 dev vethnc3

# bring all the devices online
# host 1
ip link set up vethxc1
ip link set up vethxc2
nsenter -t $DOCKER_PID1 -n ip link set up vethnc1
nsenter -t $DOCKER_PID2 -n ip link set up vethnc2
ip link set up br1
ip link set up vx1
# host 1
ip link set up vethxc3
nsenter -t $DOCKER_PID3 -n ip link set up vethnc3
ip link set up br1
ip link set up vx1

# add entries to hosts to fbd
?????
